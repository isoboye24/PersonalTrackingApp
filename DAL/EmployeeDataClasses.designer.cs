#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PERSONALTRACKING")]
	public partial class EmployeeDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDEPARTMENT(DEPARTMENT instance);
    partial void UpdateDEPARTMENT(DEPARTMENT instance);
    partial void DeleteDEPARTMENT(DEPARTMENT instance);
    partial void InsertTASKSTATE(TASKSTATE instance);
    partial void UpdateTASKSTATE(TASKSTATE instance);
    partial void DeleteTASKSTATE(TASKSTATE instance);
    partial void InsertEMPLOYEE(EMPLOYEE instance);
    partial void UpdateEMPLOYEE(EMPLOYEE instance);
    partial void DeleteEMPLOYEE(EMPLOYEE instance);
    partial void InsertMONTH(MONTH instance);
    partial void UpdateMONTH(MONTH instance);
    partial void DeleteMONTH(MONTH instance);
    partial void InsertPERMISSION(PERMISSION instance);
    partial void UpdatePERMISSION(PERMISSION instance);
    partial void DeletePERMISSION(PERMISSION instance);
    partial void InsertPERMISSIONSTATE(PERMISSIONSTATE instance);
    partial void UpdatePERMISSIONSTATE(PERMISSIONSTATE instance);
    partial void DeletePERMISSIONSTATE(PERMISSIONSTATE instance);
    partial void InsertPOSITION(POSITION instance);
    partial void UpdatePOSITION(POSITION instance);
    partial void DeletePOSITION(POSITION instance);
    partial void InsertSALARY(SALARY instance);
    partial void UpdateSALARY(SALARY instance);
    partial void DeleteSALARY(SALARY instance);
    partial void InsertTASK(TASK instance);
    partial void UpdateTASK(TASK instance);
    partial void DeleteTASK(TASK instance);
    #endregion
		
		public EmployeeDataClassesDataContext() : 
				base(global::DAL.Properties.Settings.Default.PERSONALTRACKINGConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EmployeeDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EmployeeDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EmployeeDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EmployeeDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DEPARTMENT> DEPARTMENTs
		{
			get
			{
				return this.GetTable<DEPARTMENT>();
			}
		}
		
		public System.Data.Linq.Table<TASKSTATE> TASKSTATEs
		{
			get
			{
				return this.GetTable<TASKSTATE>();
			}
		}
		
		public System.Data.Linq.Table<EMPLOYEE> EMPLOYEEs
		{
			get
			{
				return this.GetTable<EMPLOYEE>();
			}
		}
		
		public System.Data.Linq.Table<MONTH> MONTHs
		{
			get
			{
				return this.GetTable<MONTH>();
			}
		}
		
		public System.Data.Linq.Table<PERMISSION> PERMISSIONs
		{
			get
			{
				return this.GetTable<PERMISSION>();
			}
		}
		
		public System.Data.Linq.Table<PERMISSIONSTATE> PERMISSIONSTATEs
		{
			get
			{
				return this.GetTable<PERMISSIONSTATE>();
			}
		}
		
		public System.Data.Linq.Table<POSITION> POSITIONs
		{
			get
			{
				return this.GetTable<POSITION>();
			}
		}
		
		public System.Data.Linq.Table<SALARY> SALARies
		{
			get
			{
				return this.GetTable<SALARY>();
			}
		}
		
		public System.Data.Linq.Table<TASK> TASKs
		{
			get
			{
				return this.GetTable<TASK>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DEPARTMENT")]
	public partial class DEPARTMENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _departmentID;
		
		private string _departmentName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndepartmentIDChanging(int value);
    partial void OndepartmentIDChanged();
    partial void OndepartmentNameChanging(string value);
    partial void OndepartmentNameChanged();
    #endregion
		
		public DEPARTMENT()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_departmentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int departmentID
		{
			get
			{
				return this._departmentID;
			}
			set
			{
				if ((this._departmentID != value))
				{
					this.OndepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._departmentID = value;
					this.SendPropertyChanged("departmentID");
					this.OndepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_departmentName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string departmentName
		{
			get
			{
				return this._departmentName;
			}
			set
			{
				if ((this._departmentName != value))
				{
					this.OndepartmentNameChanging(value);
					this.SendPropertyChanging();
					this._departmentName = value;
					this.SendPropertyChanged("departmentName");
					this.OndepartmentNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASKSTATE")]
	public partial class TASKSTATE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _stateID;
		
		private string _stateName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnstateIDChanging(int value);
    partial void OnstateIDChanged();
    partial void OnstateNameChanging(string value);
    partial void OnstateNameChanged();
    #endregion
		
		public TASKSTATE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stateID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int stateID
		{
			get
			{
				return this._stateID;
			}
			set
			{
				if ((this._stateID != value))
				{
					this.OnstateIDChanging(value);
					this.SendPropertyChanging();
					this._stateID = value;
					this.SendPropertyChanged("stateID");
					this.OnstateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stateName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string stateName
		{
			get
			{
				return this._stateName;
			}
			set
			{
				if ((this._stateName != value))
				{
					this.OnstateNameChanging(value);
					this.SendPropertyChanging();
					this._stateName = value;
					this.SendPropertyChanged("stateName");
					this.OnstateNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EMPLOYEE")]
	public partial class EMPLOYEE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _employeeID;
		
		private int _userNo;
		
		private string _name;
		
		private string _surname;
		
		private string _imagePath;
		
		private int _departmentID;
		
		private int _positionID;
		
		private int _salary;
		
		private System.Nullable<System.DateTime> _birthday;
		
		private string _address;
		
		private string _password;
		
		private System.Nullable<bool> _isAdmin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnemployeeIDChanging(int value);
    partial void OnemployeeIDChanged();
    partial void OnuserNoChanging(int value);
    partial void OnuserNoChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnsurnameChanging(string value);
    partial void OnsurnameChanged();
    partial void OnimagePathChanging(string value);
    partial void OnimagePathChanged();
    partial void OndepartmentIDChanging(int value);
    partial void OndepartmentIDChanged();
    partial void OnpositionIDChanging(int value);
    partial void OnpositionIDChanged();
    partial void OnsalaryChanging(int value);
    partial void OnsalaryChanged();
    partial void OnbirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnbirthdayChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnisAdminChanging(System.Nullable<bool> value);
    partial void OnisAdminChanged();
    #endregion
		
		public EMPLOYEE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employeeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int employeeID
		{
			get
			{
				return this._employeeID;
			}
			set
			{
				if ((this._employeeID != value))
				{
					this.OnemployeeIDChanging(value);
					this.SendPropertyChanging();
					this._employeeID = value;
					this.SendPropertyChanged("employeeID");
					this.OnemployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userNo", DbType="Int NOT NULL")]
		public int userNo
		{
			get
			{
				return this._userNo;
			}
			set
			{
				if ((this._userNo != value))
				{
					this.OnuserNoChanging(value);
					this.SendPropertyChanging();
					this._userNo = value;
					this.SendPropertyChanged("userNo");
					this.OnuserNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_surname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string surname
		{
			get
			{
				return this._surname;
			}
			set
			{
				if ((this._surname != value))
				{
					this.OnsurnameChanging(value);
					this.SendPropertyChanging();
					this._surname = value;
					this.SendPropertyChanged("surname");
					this.OnsurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imagePath", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string imagePath
		{
			get
			{
				return this._imagePath;
			}
			set
			{
				if ((this._imagePath != value))
				{
					this.OnimagePathChanging(value);
					this.SendPropertyChanging();
					this._imagePath = value;
					this.SendPropertyChanged("imagePath");
					this.OnimagePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_departmentID", DbType="Int NOT NULL")]
		public int departmentID
		{
			get
			{
				return this._departmentID;
			}
			set
			{
				if ((this._departmentID != value))
				{
					this.OndepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._departmentID = value;
					this.SendPropertyChanged("departmentID");
					this.OndepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_positionID", DbType="Int NOT NULL")]
		public int positionID
		{
			get
			{
				return this._positionID;
			}
			set
			{
				if ((this._positionID != value))
				{
					this.OnpositionIDChanging(value);
					this.SendPropertyChanging();
					this._positionID = value;
					this.SendPropertyChanged("positionID");
					this.OnpositionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salary", DbType="Int NOT NULL")]
		public int salary
		{
			get
			{
				return this._salary;
			}
			set
			{
				if ((this._salary != value))
				{
					this.OnsalaryChanging(value);
					this.SendPropertyChanging();
					this._salary = value;
					this.SendPropertyChanged("salary");
					this.OnsalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthday", DbType="Date")]
		public System.Nullable<System.DateTime> birthday
		{
			get
			{
				return this._birthday;
			}
			set
			{
				if ((this._birthday != value))
				{
					this.OnbirthdayChanging(value);
					this.SendPropertyChanging();
					this._birthday = value;
					this.SendPropertyChanged("birthday");
					this.OnbirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(MAX)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(20)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isAdmin", DbType="Bit")]
		public System.Nullable<bool> isAdmin
		{
			get
			{
				return this._isAdmin;
			}
			set
			{
				if ((this._isAdmin != value))
				{
					this.OnisAdminChanging(value);
					this.SendPropertyChanging();
					this._isAdmin = value;
					this.SendPropertyChanged("isAdmin");
					this.OnisAdminChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MONTHS")]
	public partial class MONTH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _monthID;
		
		private string _monthName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmonthIDChanging(int value);
    partial void OnmonthIDChanged();
    partial void OnmonthNameChanging(string value);
    partial void OnmonthNameChanged();
    #endregion
		
		public MONTH()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monthID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int monthID
		{
			get
			{
				return this._monthID;
			}
			set
			{
				if ((this._monthID != value))
				{
					this.OnmonthIDChanging(value);
					this.SendPropertyChanging();
					this._monthID = value;
					this.SendPropertyChanged("monthID");
					this.OnmonthIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_monthName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string monthName
		{
			get
			{
				return this._monthName;
			}
			set
			{
				if ((this._monthName != value))
				{
					this.OnmonthNameChanging(value);
					this.SendPropertyChanging();
					this._monthName = value;
					this.SendPropertyChanged("monthName");
					this.OnmonthNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PERMISSION")]
	public partial class PERMISSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _permissionID;
		
		private int _employeeID;
		
		private System.DateTime _permissionStartDate;
		
		private System.DateTime _permissionEndDate;
		
		private int _permissionState;
		
		private string _permissionExplanation;
		
		private int _permissionDay;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpermissionIDChanging(int value);
    partial void OnpermissionIDChanged();
    partial void OnemployeeIDChanging(int value);
    partial void OnemployeeIDChanged();
    partial void OnpermissionStartDateChanging(System.DateTime value);
    partial void OnpermissionStartDateChanged();
    partial void OnpermissionEndDateChanging(System.DateTime value);
    partial void OnpermissionEndDateChanged();
    partial void OnpermissionStateChanging(int value);
    partial void OnpermissionStateChanged();
    partial void OnpermissionExplanationChanging(string value);
    partial void OnpermissionExplanationChanged();
    partial void OnpermissionDayChanging(int value);
    partial void OnpermissionDayChanged();
    #endregion
		
		public PERMISSION()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permissionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int permissionID
		{
			get
			{
				return this._permissionID;
			}
			set
			{
				if ((this._permissionID != value))
				{
					this.OnpermissionIDChanging(value);
					this.SendPropertyChanging();
					this._permissionID = value;
					this.SendPropertyChanged("permissionID");
					this.OnpermissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employeeID", DbType="Int NOT NULL")]
		public int employeeID
		{
			get
			{
				return this._employeeID;
			}
			set
			{
				if ((this._employeeID != value))
				{
					this.OnemployeeIDChanging(value);
					this.SendPropertyChanging();
					this._employeeID = value;
					this.SendPropertyChanged("employeeID");
					this.OnemployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permissionStartDate", DbType="Date NOT NULL")]
		public System.DateTime permissionStartDate
		{
			get
			{
				return this._permissionStartDate;
			}
			set
			{
				if ((this._permissionStartDate != value))
				{
					this.OnpermissionStartDateChanging(value);
					this.SendPropertyChanging();
					this._permissionStartDate = value;
					this.SendPropertyChanged("permissionStartDate");
					this.OnpermissionStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permissionEndDate", DbType="Date NOT NULL")]
		public System.DateTime permissionEndDate
		{
			get
			{
				return this._permissionEndDate;
			}
			set
			{
				if ((this._permissionEndDate != value))
				{
					this.OnpermissionEndDateChanging(value);
					this.SendPropertyChanging();
					this._permissionEndDate = value;
					this.SendPropertyChanged("permissionEndDate");
					this.OnpermissionEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permissionState", DbType="Int NOT NULL")]
		public int permissionState
		{
			get
			{
				return this._permissionState;
			}
			set
			{
				if ((this._permissionState != value))
				{
					this.OnpermissionStateChanging(value);
					this.SendPropertyChanging();
					this._permissionState = value;
					this.SendPropertyChanged("permissionState");
					this.OnpermissionStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permissionExplanation", DbType="NVarChar(MAX)")]
		public string permissionExplanation
		{
			get
			{
				return this._permissionExplanation;
			}
			set
			{
				if ((this._permissionExplanation != value))
				{
					this.OnpermissionExplanationChanging(value);
					this.SendPropertyChanging();
					this._permissionExplanation = value;
					this.SendPropertyChanged("permissionExplanation");
					this.OnpermissionExplanationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permissionDay", DbType="Int NOT NULL")]
		public int permissionDay
		{
			get
			{
				return this._permissionDay;
			}
			set
			{
				if ((this._permissionDay != value))
				{
					this.OnpermissionDayChanging(value);
					this.SendPropertyChanging();
					this._permissionDay = value;
					this.SendPropertyChanged("permissionDay");
					this.OnpermissionDayChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PERMISSIONSTATE")]
	public partial class PERMISSIONSTATE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _permissionStateID;
		
		private string _permissionStateName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpermissionStateIDChanging(int value);
    partial void OnpermissionStateIDChanged();
    partial void OnpermissionStateNameChanging(string value);
    partial void OnpermissionStateNameChanged();
    #endregion
		
		public PERMISSIONSTATE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permissionStateID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int permissionStateID
		{
			get
			{
				return this._permissionStateID;
			}
			set
			{
				if ((this._permissionStateID != value))
				{
					this.OnpermissionStateIDChanging(value);
					this.SendPropertyChanging();
					this._permissionStateID = value;
					this.SendPropertyChanged("permissionStateID");
					this.OnpermissionStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permissionStateName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string permissionStateName
		{
			get
			{
				return this._permissionStateName;
			}
			set
			{
				if ((this._permissionStateName != value))
				{
					this.OnpermissionStateNameChanging(value);
					this.SendPropertyChanging();
					this._permissionStateName = value;
					this.SendPropertyChanged("permissionStateName");
					this.OnpermissionStateNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.POSITION")]
	public partial class POSITION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _positionID;
		
		private string _positionName;
		
		private int _departmentID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpositionIDChanging(int value);
    partial void OnpositionIDChanged();
    partial void OnpositionNameChanging(string value);
    partial void OnpositionNameChanged();
    partial void OndepartmentIDChanging(int value);
    partial void OndepartmentIDChanged();
    #endregion
		
		public POSITION()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_positionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int positionID
		{
			get
			{
				return this._positionID;
			}
			set
			{
				if ((this._positionID != value))
				{
					this.OnpositionIDChanging(value);
					this.SendPropertyChanging();
					this._positionID = value;
					this.SendPropertyChanged("positionID");
					this.OnpositionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_positionName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string positionName
		{
			get
			{
				return this._positionName;
			}
			set
			{
				if ((this._positionName != value))
				{
					this.OnpositionNameChanging(value);
					this.SendPropertyChanging();
					this._positionName = value;
					this.SendPropertyChanged("positionName");
					this.OnpositionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_departmentID", DbType="Int NOT NULL")]
		public int departmentID
		{
			get
			{
				return this._departmentID;
			}
			set
			{
				if ((this._departmentID != value))
				{
					this.OndepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._departmentID = value;
					this.SendPropertyChanged("departmentID");
					this.OndepartmentIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SALARY")]
	public partial class SALARY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _salaryID;
		
		private int _employeeID;
		
		private int _amount;
		
		private int _year;
		
		private int _month;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsalaryIDChanging(int value);
    partial void OnsalaryIDChanged();
    partial void OnemployeeIDChanging(int value);
    partial void OnemployeeIDChanged();
    partial void OnamountChanging(int value);
    partial void OnamountChanged();
    partial void OnyearChanging(int value);
    partial void OnyearChanged();
    partial void OnmonthChanging(int value);
    partial void OnmonthChanged();
    #endregion
		
		public SALARY()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salaryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int salaryID
		{
			get
			{
				return this._salaryID;
			}
			set
			{
				if ((this._salaryID != value))
				{
					this.OnsalaryIDChanging(value);
					this.SendPropertyChanging();
					this._salaryID = value;
					this.SendPropertyChanged("salaryID");
					this.OnsalaryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employeeID", DbType="Int NOT NULL")]
		public int employeeID
		{
			get
			{
				return this._employeeID;
			}
			set
			{
				if ((this._employeeID != value))
				{
					this.OnemployeeIDChanging(value);
					this.SendPropertyChanging();
					this._employeeID = value;
					this.SendPropertyChanged("employeeID");
					this.OnemployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Int NOT NULL")]
		public int amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_year", DbType="Int NOT NULL")]
		public int year
		{
			get
			{
				return this._year;
			}
			set
			{
				if ((this._year != value))
				{
					this.OnyearChanging(value);
					this.SendPropertyChanging();
					this._year = value;
					this.SendPropertyChanged("year");
					this.OnyearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_month", DbType="Int NOT NULL")]
		public int month
		{
			get
			{
				return this._month;
			}
			set
			{
				if ((this._month != value))
				{
					this.OnmonthChanging(value);
					this.SendPropertyChanging();
					this._month = value;
					this.SendPropertyChanged("month");
					this.OnmonthChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TASK")]
	public partial class TASK : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _taskID;
		
		private int _employeeID;
		
		private string _taskTitle;
		
		private string _taskContent;
		
		private System.Nullable<System.DateTime> _taskStartDate;
		
		private System.Nullable<System.DateTime> _tastDeliveryDate;
		
		private int _taskState;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntaskIDChanging(int value);
    partial void OntaskIDChanged();
    partial void OnemployeeIDChanging(int value);
    partial void OnemployeeIDChanged();
    partial void OntaskTitleChanging(string value);
    partial void OntaskTitleChanged();
    partial void OntaskContentChanging(string value);
    partial void OntaskContentChanged();
    partial void OntaskStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OntaskStartDateChanged();
    partial void OntastDeliveryDateChanging(System.Nullable<System.DateTime> value);
    partial void OntastDeliveryDateChanged();
    partial void OntaskStateChanging(int value);
    partial void OntaskStateChanged();
    #endregion
		
		public TASK()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taskID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int taskID
		{
			get
			{
				return this._taskID;
			}
			set
			{
				if ((this._taskID != value))
				{
					this.OntaskIDChanging(value);
					this.SendPropertyChanging();
					this._taskID = value;
					this.SendPropertyChanged("taskID");
					this.OntaskIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employeeID", DbType="Int NOT NULL")]
		public int employeeID
		{
			get
			{
				return this._employeeID;
			}
			set
			{
				if ((this._employeeID != value))
				{
					this.OnemployeeIDChanging(value);
					this.SendPropertyChanging();
					this._employeeID = value;
					this.SendPropertyChanged("employeeID");
					this.OnemployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taskTitle", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string taskTitle
		{
			get
			{
				return this._taskTitle;
			}
			set
			{
				if ((this._taskTitle != value))
				{
					this.OntaskTitleChanging(value);
					this.SendPropertyChanging();
					this._taskTitle = value;
					this.SendPropertyChanged("taskTitle");
					this.OntaskTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taskContent", DbType="NVarChar(MAX)")]
		public string taskContent
		{
			get
			{
				return this._taskContent;
			}
			set
			{
				if ((this._taskContent != value))
				{
					this.OntaskContentChanging(value);
					this.SendPropertyChanging();
					this._taskContent = value;
					this.SendPropertyChanged("taskContent");
					this.OntaskContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taskStartDate", DbType="Date")]
		public System.Nullable<System.DateTime> taskStartDate
		{
			get
			{
				return this._taskStartDate;
			}
			set
			{
				if ((this._taskStartDate != value))
				{
					this.OntaskStartDateChanging(value);
					this.SendPropertyChanging();
					this._taskStartDate = value;
					this.SendPropertyChanged("taskStartDate");
					this.OntaskStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tastDeliveryDate", DbType="Date")]
		public System.Nullable<System.DateTime> tastDeliveryDate
		{
			get
			{
				return this._tastDeliveryDate;
			}
			set
			{
				if ((this._tastDeliveryDate != value))
				{
					this.OntastDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._tastDeliveryDate = value;
					this.SendPropertyChanged("tastDeliveryDate");
					this.OntastDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taskState", DbType="Int NOT NULL")]
		public int taskState
		{
			get
			{
				return this._taskState;
			}
			set
			{
				if ((this._taskState != value))
				{
					this.OntaskStateChanging(value);
					this.SendPropertyChanging();
					this._taskState = value;
					this.SendPropertyChanged("taskState");
					this.OntaskStateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
